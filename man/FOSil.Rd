% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FOSil.R
\name{FOSil}
\alias{FOSil}
\title{The Fast Optimum Silhouette algorithm}
\usage{
FOSil(dx, k, n = "default", ns = 25, initMethod = "average")
}
\arguments{
\item{dx}{A "dist" object, which can be obtained by the "dist" function.}

\item{k}{The number of clusters.}

\item{n}{The sample size. By default, n = ceiling(0.2*N).}

\item{ns}{The number of scalOSil instances. By default, ns = 25.}

\item{initMethod}{A character vector specifying initialization methods. It must contain only supported methods:
one of the two combined methods "multiple1" and "multiple2"; or any combination of of "pam", "average", "single",
"complete", "ward.D", "ward.D2", "mcquitty", "median", and "centroid". See ?Init for more details.}
}
\value{
\describe{
\item{Clustering}{Final clustering.}
\item{ASW}{The ASW of the scalOSil clustering w.r.t. dx.}
}
}
\description{
This function implements the Fast Optimum Silhouette (FOSil) algorithm.
}
\details{
The Fast Optimum Silhouette algorithm (FOSil; Batool & Hennig (2021)) is an approximation algorithm of OSil,
based on subsetting. It consists of two steps: partial clustering (PC) and classification (C).

In the PC-step of FOSil, FOSil is applied to various subsets of equal size, in which the subset S and its OSil
clustering C_S maximizing the ASW is selected. In the C-step of FOSil, each unassigned data point is classified
into one of the clusters in C_S in such a way that the ASW is maximized.

However, FOSil is still a computationally expensive algorithm. The PC-step of FOSil scales cubically in
n and the C-step of FOSil scales quadratically in n. scalOSil is an improved version of FOSil, which improves both
steps of FOSil by O(n) time, allowing us to handle much larger datasets (see ?scalOSil for more details).
}
\examples{
x = iris[,-5]
dx = dist(x)
FOSil_clustering = FOSil(dx, 3, initMethod = "average")
plot(x, col = FOSil_clustering$Clustering)

}
\references{
Batool, F. and Hennig, C., 2021. Clustering with the average silhouette width. Computational Statistics & Data Analysis, 158, p.107190.
}
\author{
Minh Long Nguyen \email{edelweiss611428@gmail.com}
}
